version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart-pdf-splitter-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/smart_pdf_splitter
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - UPLOAD_DIR=/app/uploads
      - TEMP_DIR=/app/temp
      - MAX_UPLOAD_SIZE=524288000  # 500MB
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      - db
      - redis
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart-pdf-splitter-celery
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/smart_pdf_splitter
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - UPLOAD_DIR=/app/uploads
      - TEMP_DIR=/app/temp
    depends_on:
      - db
      - redis
    command: celery -A src.core.tasks worker --loglevel=info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart-pdf-splitter-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    command: npm start

  db:
    image: postgres:16-alpine
    container_name: smart-pdf-splitter-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=smart_pdf_splitter
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: smart-pdf-splitter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Optional: Flower for Celery monitoring
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart-pdf-splitter-flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    command: celery -A src.core.tasks flower --port=5555

volumes:
  postgres_data:
  redis_data: